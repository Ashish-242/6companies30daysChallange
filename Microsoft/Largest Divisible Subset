class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        List<Integer> list=new ArrayList<>();
        int n=nums.length;
         if(n==1) {
             list.add(nums[0]);
             return list;
         }
        Arrays.sort(nums);
        
       
        int[] dp=new int[n];
        Arrays.fill(dp,1);
        int lastindex=0;
        int mx=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[i]%nums[j]==0){
                    dp[i]=Math.max(dp[i],dp[j]+1);
                    if(dp[i]> mx){
                        mx=dp[i];
                        lastindex=i;
                    }
                }
            }
        }
        int index=lastindex;
        int value=nums[index];
        int currentcount=dp[lastindex];
        for(int i=lastindex;i>=0;i--){
            if(value%nums[i]==0  && (dp[i]==currentcount)){
                list.add(nums[i]);
                currentcount=currentcount-1;
                value=nums[i];
            }
        }
        return list;
    }
}
